from playwright.sync_api import sync_playwright
import pandas as pd
import json

url_to_watch = "https://www.vans.com.br/arezzocoocc/v2/vans/web-parameters"
url_check = "https://www.vans.com.br/arezzocoocc/v2/vans/productrecommendation?provider=aws"


obj_parameters = {
    "page": [],
    "status": []
}

obj_check = {
    "page": [],
    "logic": []
}

df_result_parameters = ""
df_result_check = ""

carrossel_logic = ['user_personalization', 'complement_items', 'related_look']


def run():
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)  # Set to True to run headless
        context = browser.new_context()
        page = context.new_page()

        def verifica_parameters(response):
            if response.request.resource_type == "xhr" and response.request.url == url_check:
                post_data = response.request.post_data
                json_post_data = json.loads(post_data)

                print(f"\n‚öôÔ∏è  URL DA PAGINA: {page.url}")
                print(f"üì¶ Payload: {json_post_data}")
                print(f"‚úÖ URL alvo capturada: {response.request.url} \n")
                
                obj_check["logic"].append(json_post_data['action'])

            if url_to_watch in response.url:
                print(f"‚úÖ URL alvo capturada:: {response.url}")
                
                try:
                    json_data = response.json()
                    parameters = json_data.get('parameters')
                    for item in parameters:
                        if item['code'].endswith(tuple(carrossel_logic)):
                            obj_parameters['page'].append(item['code']) 
                            obj_parameters['status'].append(item['value'])
                    df_result_parameters = pd.DataFrame(obj_parameters)
                    print(df_result_parameters)

                except Exception as e:
                    print(f"‚ö†Ô∏è n√£o foi possivel fazer o parse JSON: {e}")

        page.on("response", verifica_parameters)

        page.goto("https://www.vans.com.br/")
        page.wait_for_timeout(3000)

        page.goto("https://www.vans.com.br/tenis-super-lowpro-marshmallow/p/1002003320001U")
        page.wait_for_timeout(2000)

        page.evaluate('window.scrollTo(0, document.body.scrollHeight)')
        page.wait_for_timeout(2000)

        button_size_selector = "div.product-grid__info ul.list button:not(.unavailable)"
        button_buy_selector = "div.buy-button-wrapper button.primary"

        page.wait_for_timeout(3000)

        page.wait_for_selector(button_size_selector, timeout=3000)
        page.click(button_size_selector, timeout=2000)
        page.click(button_buy_selector, timeout=2000)
        
        page.wait_for_timeout(30000)


if __name__ == "__main__":
    run()